#ABUILD created by/создан: NomerUNO, uno.kms at gmail.com 
#----------------------------- General vars --------------------------------------
#------------------------- Основные переменные -----------------------------------
pkgname=libindicate
pkgver=0.6.1
pkgbuild=1
arch=('auto')

shortdesc="A small library for applications to raise 'flags' on DBus for other components of the desktop to pick up and visualize"

source=("http://launchpad.net/${pkgname}/${pkgver%.*}/${pkgver}/+download/${pkgname}-${pkgver}.tar.gz")

patch_opts=("")

#----------------------------- AgiliaLinux vars --------------------------------------
#--------------------- Специфичные для AgiliaLinux ------------------------------
#short and long tags / длинный и короткий тег
tags=""

#dependencies only needed to build package
build_deps="libdbusmenu dbus-glib gtk3-ubuntu gobject-introspection vala gtk-sharp-2 pygtk gnome-doc-utils"

provides=""
conflicts=""

adddep=""
removedep=""

#for multi pkg abuild
pkglist=

#Set number of jobs while compliling, otherwise it'll be autodetected
numjobs=1

#additional files should be copied into ${pkgdir}/usr/doc/${pkgname}-${pkgver} dir from sources
docs=
gendeps_blacklist=

#custom_opts: skip_validate skip_gendeps no_postperm no_strip no_ccache
custom_opts=""

#----------------------------- Make PKG --------------------------------------
#-------------------------- Сборка пакета ------------------------------------

#ran before function build()
#запускается перед сборкой.
#before_build()
#{
#
#}

build()
{
cd "${srcdir}/${pkgbase}-${pkgver}"

burn_patches

#libindicate-gtk2 won't install if libindicate isn't installed yet
sed -i 's|$(LIBINDICATEGTK_CFLAGS)|$(LIBINDICATEGTK_CFLAGS) -L../libindicate/.libs|' libindicate-gtk/Makefile.{am,in}

autoreconf -fi

./configure \
--prefix=/usr \
--sysconfdir=/etc \
--localstatedir=/var \
--libdir=/usr/lib${LIBDIRSUFFIX} \
--libexecdir=/usr/lib${LIBDIRSUFFIX}/${pkgname} \
--disable-static \
--mandir=/usr/man \
--with-gtk=3

make
make DESTDIR=$pkgdir install
}


#ran after function build() 
#после сборки
#after_build()
#{

#}
